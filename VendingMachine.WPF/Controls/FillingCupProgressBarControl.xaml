<UserControl x:Name="UsrCtrl" x:Class="VendingMachine.WPF.FillingCupProgressBarControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VendingMachine.WPF"
             mc:Ignorable="d" 
             d:DesignHeight="250" d:DesignWidth="350">
    <UserControl.Resources>
        <DataTemplate x:Key="QueueItemTemplate" DataType="{x:Type ListViewItem}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                    <Image Stretch="None" Source="{Binding QImage, ElementName=UsrCtrl}"/>
                </StackPanel>
                <StackPanel Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                    <Border BorderThickness="{Binding Thickness}" BorderBrush="Black" Width="65" Height="65"></Border>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <Style x:Key="WrapListStyle" TargetType="{x:Type ListView}">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="IsTextSearchEnabled" Value="False"/>
            <Setter Property="IsHitTestVisible" Value="True"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Visible"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"></Setter>
            <Setter Property="MinWidth" Value="204"/>
            <Setter Property="MinHeight" Value="153"/>
            <Setter Property="Height" Value="153"/>
            <Setter Property="MaxHeight" Value="153"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Vertical" ItemHeight="66" ItemWidth="66" Margin="0" MinWidth="204" MinHeight="132" Height="132" MaxHeight="132" IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Top"></WrapPanel>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QueueCouponItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Padding" Value="0,0,1,1"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <StackPanel Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                                <ContentPresenter></ContentPresenter>
                            </StackPanel>
                            <StackPanel Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                                <Grid Margin="0,0,-6,-4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Border Background="LightBlue" BorderBrush="Blue" BorderThickness="1" Padding="0" Height="16" Width="50"></Border>
                                    </StackPanel>
                                    <StackPanel Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Label FontSize="9" FontWeight="Bold" Foreground="SeaGreen" Margin="0,-2,0,0" Content="{Binding ElementName=UsrCtrl, Path=Coupon}"></Label>
                                    </StackPanel>
                                </Grid>
                                <StackPanel.RenderTransform>
                                    <RotateTransform CenterX="0" CenterY="8" Angle="-45"></RotateTransform>
                                </StackPanel.RenderTransform>
                            </StackPanel>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QueueItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Padding" Value="0,0,1,1"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <ContentPresenter></ContentPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <local:ListViewItemStyleSelector x:Key="VariousItemStyleSelector" CouponItemStyle="{StaticResource QueueCouponItemStyle}" ItemStyle="{StaticResource QueueItemStyle}"></local:ListViewItemStyleSelector>
    </UserControl.Resources>
    <Grid>
        <GroupBox x:Name="Queue" FontWeight="Bold" Margin="10,0,4,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="120" Width="120" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <local:BorderContainerFlash x:Name="BorderFlash" Grid.Column="0" Opacity="0" BorderThickness="0" BorderBrush="Transparent">
                    <local:BorderContainerFlash.Triggers>
                        <EventTrigger RoutedEvent="local:BorderContainerFlash.FlashAndFillCup">
                            <BeginStoryboard>
                                <Storyboard Completed="Timeline_OnStarted">
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1"/>
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="VisibilityBool" BeginTime="0:0:1">
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:1" Value="False"/>
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:2" Value="True"/>
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:3" Value="False"/>
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:4" Value="True"/>
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:5" Value="False"/>
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:6" Value="True"/>
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                            <BeginStoryboard HandoffBehavior="Compose">
                                <Storyboard BeginTime="0:0:27" Completed="Timeline_OnFinished">
                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="VisibilityBool">
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:1" Value="False"/>
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:2" Value="True"/>
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:3" Value="False"/>
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:4" Value="True"/>
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:5" Value="False"/>
                                        <DiscreteBooleanKeyFrame KeyTime="0:0:6" Value="True"/>
                                    </BooleanAnimationUsingKeyFrames>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:1" BeginTime="0:0:7"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </local:BorderContainerFlash.Triggers>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                            <local:CupProgressBarControl x:Name="CupControl"/>
                        </StackPanel>
                        <StackPanel Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                            <local:BorderContainer x:Name="VisualCoupon" Background="LightBlue" BorderBrush="Blue" BorderThickness="2" Opacity="0.8" Padding="0" Margin="-38,0,0,40">
                                <Label FontSize="14" FontWeight="Bold" Foreground="SeaGreen" Content="{Binding ElementName=UsrCtrl, Path=Coupon}"></Label>
                            </local:BorderContainer>
                            <StackPanel.RenderTransform>
                                <RotateTransform CenterX="0" CenterY="0" Angle="-30"></RotateTransform>
                            </StackPanel.RenderTransform>
                        </StackPanel>
                    </Grid>
                </local:BorderContainerFlash>
                <Border Grid.Column="1" BorderThickness="1" BorderBrush="Black" Padding="1">
                    <ListView x:Name="QueueView" Style="{StaticResource WrapListStyle}" ItemsSource="{Binding QItems}" ItemContainerStyleSelector="{DynamicResource VariousItemStyleSelector}" ItemTemplate="{StaticResource QueueItemTemplate}"></ListView>
                    <!--<ListView x:Name="QueueView" Style="{StaticResource WrapListStyle}" ItemsSource="{Binding QItems}" ItemContainerStyle="{StaticResource QueueItemStyle}" ItemTemplate="{StaticResource QueueItemTemplate}"></ListView>-->
                </Border>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
